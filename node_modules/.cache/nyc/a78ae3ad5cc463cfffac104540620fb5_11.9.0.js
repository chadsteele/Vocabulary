var cov_25grm4ggn6=function(){var path="c:\\code\\vocabulary\\Vocabulary.js",hash="480a65c488843e4dd0b8e412568e1b54715ab77e",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"c:\\code\\vocabulary\\Vocabulary.js",statementMap:{"0":{start:{line:5,column:8},end:{line:5,column:24}},"1":{start:{line:6,column:8},end:{line:6,column:21}},"2":{start:{line:7,column:8},end:{line:7,column:21}},"3":{start:{line:9,column:8},end:{line:9,column:23}},"4":{start:{line:15,column:8},end:{line:15,column:26}},"5":{start:{line:15,column:19},end:{line:15,column:26}},"6":{start:{line:17,column:8},end:{line:22,column:11}},"7":{start:{line:18,column:12},end:{line:18,column:38}},"8":{start:{line:19,column:12},end:{line:19,column:59}},"9":{start:{line:20,column:12},end:{line:20,column:81}},"10":{start:{line:21,column:12},end:{line:21,column:46}},"11":{start:{line:23,column:8},end:{line:23,column:20}},"12":{start:{line:29,column:8},end:{line:29,column:32}},"13":{start:{line:29,column:23},end:{line:29,column:32}},"14":{start:{line:30,column:8},end:{line:30,column:50}},"15":{start:{line:35,column:20},end:{line:35,column:21}},"16":{start:{line:36,column:20},end:{line:36,column:43}},"17":{start:{line:37,column:8},end:{line:39,column:11}},"18":{start:{line:38,column:12},end:{line:38,column:49}},"19":{start:{line:42,column:8},end:{line:42,column:36}},"20":{start:{line:46,column:0},end:{line:46,column:28}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:4,column:4},end:{line:4,column:5}},loc:{start:{line:4,column:22},end:{line:10,column:5}},line:4},"1":{name:"(anonymous_1)",decl:{start:{line:14,column:4},end:{line:14,column:5}},loc:{start:{line:14,column:14},end:{line:24,column:5}},line:14},"2":{name:"(anonymous_2)",decl:{start:{line:17,column:38},end:{line:17,column:39}},loc:{start:{line:17,column:46},end:{line:22,column:9}},line:17},"3":{name:"(anonymous_3)",decl:{start:{line:28,column:4},end:{line:28,column:5}},loc:{start:{line:28,column:15},end:{line:31,column:5}},line:28},"4":{name:"(anonymous_4)",decl:{start:{line:34,column:4},end:{line:34,column:5}},loc:{start:{line:34,column:20},end:{line:43,column:5}},line:34},"5":{name:"(anonymous_5)",decl:{start:{line:37,column:22},end:{line:37,column:23}},loc:{start:{line:37,column:27},end:{line:39,column:9}},line:37}},branchMap:{"0":{loc:{start:{line:15,column:8},end:{line:15,column:26}},type:"if",locations:[{start:{line:15,column:8},end:{line:15,column:26}},{start:{line:15,column:8},end:{line:15,column:26}}],line:15},"1":{loc:{start:{line:19,column:32},end:{line:19,column:53}},type:"binary-expr",locations:[{start:{line:19,column:32},end:{line:19,column:48}},{start:{line:19,column:52},end:{line:19,column:53}}],line:19},"2":{loc:{start:{line:20,column:23},end:{line:20,column:80}},type:"cond-expr",locations:[{start:{line:20,column:53},end:{line:20,column:69}},{start:{line:20,column:72},end:{line:20,column:80}}],line:20},"3":{loc:{start:{line:21,column:24},end:{line:21,column:45}},type:"binary-expr",locations:[{start:{line:21,column:24},end:{line:21,column:40}},{start:{line:21,column:44},end:{line:21,column:45}}],line:21},"4":{loc:{start:{line:29,column:8},end:{line:29,column:32}},type:"if",locations:[{start:{line:29,column:8},end:{line:29,column:32}},{start:{line:29,column:8},end:{line:29,column:32}}],line:29},"5":{loc:{start:{line:30,column:16},end:{line:30,column:37}},type:"binary-expr",locations:[{start:{line:30,column:16},end:{line:30,column:32}},{start:{line:30,column:36},end:{line:30,column:37}}],line:30}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();class Vocabulary{constructor(text){cov_25grm4ggn6.f[0]++;cov_25grm4ggn6.s[0]++;this.count={};//dictionary of the frequency of each word 
cov_25grm4ggn6.s[1]++;this.max=0;//maximum word frequency
cov_25grm4ggn6.s[2]++;this.sum=0;//sum of all frequencies
cov_25grm4ggn6.s[3]++;this.add(text);}//add words to my vocabulary
add(text){cov_25grm4ggn6.f[1]++;cov_25grm4ggn6.s[4]++;if(!text){cov_25grm4ggn6.b[0][0]++;cov_25grm4ggn6.s[5]++;return;}else{cov_25grm4ggn6.b[0][1]++;}//create a hash table of words and their frequency, (3+ char words)
cov_25grm4ggn6.s[6]++;text.match(/\w{3,}/g).forEach(word=>{cov_25grm4ggn6.f[2]++;cov_25grm4ggn6.s[7]++;word=word.toLowerCase();cov_25grm4ggn6.s[8]++;this.count[word]=((cov_25grm4ggn6.b[1][0]++,this.count[word])||(cov_25grm4ggn6.b[1][1]++,0))+1;cov_25grm4ggn6.s[9]++;this.max=this.max<this.count[word]?(cov_25grm4ggn6.b[2][0]++,this.count[word]):(cov_25grm4ggn6.b[2][1]++,this.max);cov_25grm4ggn6.s[10]++;this.sum+=(cov_25grm4ggn6.b[3][0]++,this.count[word])||(cov_25grm4ggn6.b[3][1]++,0);});cov_25grm4ggn6.s[11]++;return this;}//calculate the rank of a word being used in the vocabulary
//e.g. a top ranked word's count will equal the max count
rank(word){cov_25grm4ggn6.f[3]++;cov_25grm4ggn6.s[12]++;if(!this.sum){cov_25grm4ggn6.b[4][0]++;cov_25grm4ggn6.s[13]++;return 0;}else{cov_25grm4ggn6.b[4][1]++;}cov_25grm4ggn6.s[14]++;return((cov_25grm4ggn6.b[5][0]++,this.count[word])||(cov_25grm4ggn6.b[5][1]++,0))/this.max;}//calculate how relevant "that" vocabulary is to me
relevance(that){cov_25grm4ggn6.f[4]++;let total=(cov_25grm4ggn6.s[15]++,0);let words=(cov_25grm4ggn6.s[16]++,Object.keys(this.count));cov_25grm4ggn6.s[17]++;words.forEach(w=>{cov_25grm4ggn6.f[5]++;cov_25grm4ggn6.s[18]++;total+=this.rank(w)*that.rank(w);});//return the average rank of using my words in the other vocabulary
cov_25grm4ggn6.s[19]++;return total/words.length;}}cov_25grm4ggn6.s[20]++;module.exports=Vocabulary;